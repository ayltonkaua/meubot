
const crypto = require('crypto');

// Armazena c√≥digos tempor√°rios em mem√≥ria (em produ√ß√£o, use Redis ou banco)
const accessCodes = new Map();

// Refer√™ncia ao socket do bot (ser√° definida pelo index.js)
let botSocket = null;

function setBotSocket(socket) {
  botSocket = socket;
  console.log('‚úÖ Socket do bot definido no auth-service');
}

async function sendCodeViaWhatsApp(jid, code) {
  if (!botSocket) {
    throw new Error('Bot do WhatsApp n√£o est√° conectado');
  }
  
  try {
    await botSocket.sendMessage(jid, {
      text: `üîê *C√≥digo de Acesso ao Sistema Web*\n\nSeu c√≥digo: *${code}*\n\n‚è∞ Este c√≥digo expira em 10 minutos.\n\nüíª Digite este c√≥digo no site para acessar seus registros.`,
    });
    console.log(`‚úÖ C√≥digo ${code} enviado via WhatsApp para ${jid}`);
    return true;
  } catch (error) {
    console.error('‚ùå Erro ao enviar c√≥digo via WhatsApp:', error);
    throw error;
  }
}

function generateAccessCode(userJid) {
  // Gera c√≥digo de 6 d√≠gitos
  const code = Math.random().toString().slice(2, 8);
  
  // Armazena com expira√ß√£o de 10 minutos
  accessCodes.set(userJid, {
    code,
    expires: Date.now() + (10 * 60 * 1000)
  });
  
  console.log(`üîë C√≥digo gerado para ${userJid}: ${code}`);
  return code;
}

function verifyAccessCode(userJid, inputCode) {
  console.log(`üîç Verificando c√≥digo no auth-service:`);
  console.log(`   JID: ${userJid}`);
  console.log(`   C√≥digo digitado: ${inputCode}`);
  
  const stored = accessCodes.get(userJid);
  console.log(`   C√≥digo armazenado:`, stored);
  
  if (!stored) {
    console.log(`   ‚ùå Nenhum c√≥digo encontrado para este JID`);
    return false;
  }
  
  if (Date.now() > stored.expires) {
    console.log(`   ‚ùå C√≥digo expirado`);
    accessCodes.delete(userJid);
    return false;
  }
  
  if (stored.code === inputCode) {
    console.log(`   ‚úÖ C√≥digo v√°lido!`);
    accessCodes.delete(userJid);
    return true;
  }
  
  console.log(`   ‚ùå C√≥digo n√£o confere`);
  return false;
}

module.exports = { generateAccessCode, verifyAccessCode, setBotSocket, sendCodeViaWhatsApp };
